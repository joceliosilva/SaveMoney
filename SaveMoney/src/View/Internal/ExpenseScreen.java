/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Internal;

import Model.Enums.*;
import Controller.*;
import Model.Entity.Account;
import Model.Enums.FormOfPayment.ExpenseStatus;
import Model.Home.*;
import static View.HomeScreen.desktop;
import static View.Internal.ExpenseFullScreen.jTExpense;
import static View.LoginScreen.email1;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Renan
 */
public final class ExpenseScreen extends javax.swing.JInternalFrame {

    ExpenseController exp = new ExpenseController();
    AccountController ac = new AccountController();
    CardController c = new CardController();
    CategoryController cat = new CategoryController();
    DisplayManager d = new DisplayManager();

    String email = email1;
    Account account = ac.getAccountByEmail(email);

    public ExpenseScreen(boolean query) throws SQLException { //true = Update / false = Create
        initComponents();
        cmbCartao.setVisible(false);
        txtCart.setVisible(false);
        isUpdateOrCreate(query);       
    }

    /**
     * This method is called from within the constructor to initialize the
     * form.WARNING: Do NOT modify this code.The content of this method is
     * always regenerated by the Form Editor.
     *
     * @param query
     * @param table
     * @throws java.sql.SQLException
     */
    public void isUpdateOrCreate(boolean query) throws SQLException {
        if (query) {
            btnSave.setOpaque(true);
            setValuesOfTable();
        } else {
            btnUpdate.setOpaque(true);
            exp.getFormPayList(cmbFormaPay);
            cat.getcategoryList(cmbCategoria, account.getId());
        }
    }

    public void setValuesOfTable() throws SQLException {
        if (jTExpense.getSelectedRow() != -1) {
            String categoryName = (String) jTExpense.getValueAt(jTExpense.getSelectedRow(), 3);
            Double value = (Double) jTExpense.getValueAt(jTExpense.getSelectedRow(), 4);
            Date date = (Date) jTExpense.getValueAt(jTExpense.getSelectedRow(), 5);
            String description = (String) jTExpense.getValueAt(jTExpense.getSelectedRow(), 6);
            Integer numberOfInstallments = (Integer) jTExpense.getValueAt(jTExpense.getSelectedRow(), 7);
            FormOfPayment formOfPayment = (FormOfPayment) jTExpense.getValueAt(jTExpense.getSelectedRow(), 8);
            
            cat.getcategoryList(cmbCategoria, account.getId());
            cmbCategoria.setSelectedItem(categoryName);
                        
            exp.getFormPayList(cmbFormaPay);
            cmbFormaPay.setSelectedItem(formOfPayment);

            formPayIsCard(formOfPayment);

            txtDescricao.setText(description);
            txtNumParc.setText(numberOfInstallments.toString());
            chooserData.setDate(date);
            txtValor.setText(value.toString());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma despesa!");
        }
    }

    public void formPayIsCard(FormOfPayment form) {
        if (!form.equals(FormOfPayment.DINHEIRO)) {
            try { // Verifica se o Usuário quer pagar com algum cartão
                txtCart.setVisible(true);
                cmbCartao.setVisible(true);
                boolean valid = c.getCardNumberList(cmbCartao, account.getId());

                if (!valid) { // caso não encontre algum cartão
                    btnSave.setVisible(false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(ExpenseScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            txtCart.setVisible(false);
            cmbCartao.setVisible(false);
            btnSave.setVisible(true);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCart = new javax.swing.JLabel();
        cmbCartao = new javax.swing.JComboBox<>();
        txtNumParc = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        cmbCategoria = new javax.swing.JComboBox<>();
        txt1 = new javax.swing.JLabel();
        txt = new javax.swing.JLabel();
        txt3 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        txt4 = new javax.swing.JLabel();
        chooserData = new com.toedter.calendar.JDateChooser();
        txt5 = new javax.swing.JLabel();
        cmbFormaPay = new javax.swing.JComboBox<>();
        txt6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        btnClose = new javax.swing.JLabel();
        btnLimpar1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(30, 30, 60));
        setBorder(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCart.setBackground(new java.awt.Color(255, 255, 255));
        txtCart.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txtCart.setForeground(new java.awt.Color(255, 255, 255));
        txtCart.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtCart.setText("Cartão");
        getContentPane().add(txtCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 277, 183, 30));

        cmbCartao.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(cmbCartao, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 325, 220, 30));
        getContentPane().add(txtNumParc, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 231, 220, 28));

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Salvar");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 540, 100, 33));

        getContentPane().add(cmbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 135, 220, 30));

        txt1.setBackground(new java.awt.Color(255, 255, 255));
        txt1.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txt1.setForeground(new java.awt.Color(255, 255, 255));
        txt1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt1.setText("Categoria");
        getContentPane().add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 87, 183, 30));

        txt.setBackground(new java.awt.Color(255, 255, 255));
        txt.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txt.setForeground(new java.awt.Color(255, 255, 255));
        txt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt.setText("Valor");
        getContentPane().add(txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 183, 183, 30));

        txt3.setBackground(new java.awt.Color(255, 255, 255));
        txt3.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txt3.setForeground(new java.awt.Color(255, 255, 255));
        txt3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt3.setText("N° de Parcelas");
        getContentPane().add(txt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 183, 183, 30));
        getContentPane().add(txtValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 231, 239, 28));

        txt4.setBackground(new java.awt.Color(255, 255, 255));
        txt4.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txt4.setForeground(new java.awt.Color(255, 255, 255));
        txt4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt4.setText("Data");
        getContentPane().add(txt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 277, 183, 30));

        chooserData.setDateFormatString("dd-MM-yyyy");
        getContentPane().add(chooserData, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 325, 239, 30));

        txt5.setBackground(new java.awt.Color(255, 255, 255));
        txt5.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txt5.setForeground(new java.awt.Color(255, 255, 255));
        txt5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt5.setText("Descrição");
        getContentPane().add(txt5, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 373, 183, 30));

        cmbFormaPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFormaPayActionPerformed(evt);
            }
        });
        getContentPane().add(cmbFormaPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 135, 239, 30));

        txt6.setBackground(new java.awt.Color(255, 255, 255));
        txt6.setFont(new java.awt.Font("Ruda", 0, 24)); // NOI18N
        txt6.setForeground(new java.awt.Color(255, 255, 255));
        txt6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt6.setText("Forma de Pagamento");
        getContentPane().add(txt6, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 87, -1, 30));

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 414, 504, 74));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Close_32px.png"))); // NOI18N
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1006, 11, -1, -1));

        btnLimpar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLimpar1.setText("Limpar");
        btnLimpar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpar1MouseClicked(evt);
            }
        });
        getContentPane().add(btnLimpar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 540, 90, 33));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Atualizar");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 540, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked

        try {
            String name = cmbCategoria.getSelectedItem().toString(); // NULL
            Category category = null;
            if (name != null && !name.isEmpty()) {
                category = cat.getCategoryByName(name);
            }

            Double value = Double.parseDouble(txtValor.getText());
            String description = txtDescricao.getText(); // NULL           
            FormOfPayment formOfPayment = (FormOfPayment) cmbFormaPay.getSelectedItem();
            Integer numberOfInstallments = Integer.parseInt(txtNumParc.getText());
            ExpenseStatus status = ExpenseStatus.NÃO_PAGO; // Status = 1 > NOT_PAID

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date data = chooserData.getDate();
            String dataFormatada = sdf.format(data);

            boolean sucesso = exp.createExpense(account.getId(), category, value, dataFormatada, description, formOfPayment, numberOfInstallments, status);

            if (sucesso) {
                JOptionPane.showMessageDialog(null, "Despesa salva com sucesso!");
                d.openInternalFrame(desktop, new ExpenseFullScreen());
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Informe os campos corretamente!");
            }

        } catch (SQLException ex) {
            Logger.getLogger(CardsScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveMouseClicked

    private void cmbFormaPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFormaPayActionPerformed
        formPayIsCard((FormOfPayment) cmbFormaPay.getSelectedItem());
    }//GEN-LAST:event_cmbFormaPayActionPerformed

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnCloseMouseClicked

    private void btnLimpar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpar1MouseClicked
        txtValor.setText("");
        txtDescricao.setText("");
        txtNumParc.setText("");
        chooserData.setDate(new Date());
    }//GEN-LAST:event_btnLimpar1MouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        try {
            String name = cmbCategoria.getSelectedItem().toString(); // NULL
            Category category = null;
            if (name != null && !name.isEmpty()) {
                category = cat.getCategoryByName(name);
            }

            Double value = Double.parseDouble(txtValor.getText());
            String description = txtDescricao.getText(); // NULL           
            FormOfPayment formOfPayment = (FormOfPayment) cmbFormaPay.getSelectedItem();
            Integer numberOfInstallments = Integer.parseInt(txtNumParc.getText());
            ExpenseStatus status = ExpenseStatus.NÃO_PAGO; // Status = 1 > NOT_PAID

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date data = chooserData.getDate();
            String dataFormatada = sdf.format(data);

            boolean sucesso = exp.createExpense(account.getId(), category, value, dataFormatada, description, formOfPayment, numberOfInstallments, status);

            if (sucesso) {
                JOptionPane.showMessageDialog(null, "Despesa salva com sucesso!");
                d.openInternalFrame(desktop, new ExpenseFullScreen());
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Informe os campos corretamente!");
            }

        } catch (SQLException ex) {
            Logger.getLogger(CardsScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClose;
    private javax.swing.JButton btnLimpar1;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser chooserData;
    public static javax.swing.JComboBox<Integer> cmbCartao;
    private javax.swing.JComboBox<String> cmbCategoria;
    public static javax.swing.JComboBox<FormOfPayment> cmbFormaPay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel txt;
    private javax.swing.JLabel txt1;
    private javax.swing.JLabel txt3;
    private javax.swing.JLabel txt4;
    private javax.swing.JLabel txt5;
    private javax.swing.JLabel txt6;
    private javax.swing.JLabel txtCart;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtNumParc;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

}
